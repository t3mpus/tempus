{
  "name": "wtf8",
  "description": "A Node.JS UTF-8 encoder and decoder which is able to handle characters outside Basic Multilingual Plane",
  "keywords": [
    "utf8",
    "unicode"
  ],
  "version": "0.1.1",
  "homepage": "http://github.com/lautis/wtf8",
  "author": {
    "name": "Ville Lautanala"
  },
  "main": "./wtf8.js",
  "directories": {
    "lib": "."
  },
  "scripts": {
    "test": "node test/index.js",
    "preinstall": "node-gyp configure build"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/lautis/wtf8.git"
  },
  "devDependencies": {
    "benchmark": "0.3.0",
    "microtime": "0.2.0"
  },
  "license": "MIT",
  "engines": {
    "node": "*"
  },
  "readme": "# WTF8\n\nA UTF-8 decoder and encoder which can handle characters outside Basic Multilingual Plane for node.js. It's also reasonably fast.\n\n## Why?\n\nV8 doesn't like 4-byte UTF-8 characters. ðŸ˜ž\n\n## Methods\n\n### .decode(buffer)\n\nDecode buffer containing UTF-8 data to JS string.\n\n    var utf8 = require('wtf8');\n    utf8.decode(new Buffer([0x68, 0x65, 0x6c, 0x6c, 0x6f]));\n    // => 'hello'\n\n### .encode(string)\n\nEncode strings to buffer.\n\n    var utf8 = require('wtf8');\n    utf8.encode('hello');\n    // => <SlowBuffer 68 65 6c 6c 6f>\n\n## TODO\n\n* stream piping\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/lautis/wtf8/issues"
  },
  "_id": "wtf8@0.1.1",
  "dist": {
    "shasum": "b4557e7a0a0a2591dc59987e9652f368d4904eb5"
  },
  "_from": "https://github.com/lautis/wtf8/tarball/master",
  "_resolved": "https://github.com/lautis/wtf8/tarball/master"
}
