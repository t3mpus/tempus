{
  "name": "butils",
  "version": "0.0.7",
  "description": "helper functions to make buffers faster",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/nlf/node-butils.git"
  },
  "keywords": [
    "buffer",
    "ctype"
  ],
  "author": {
    "name": "Nathan LaFreniere",
    "email": "quitlahok@gmail.com"
  },
  "license": "MIT",
  "devDependencies": {
    "audit": "0.0.6",
    "precommit-hook": ""
  },
  "readme": "butils\n------\n\nThese are some helper functions that appear to be significantly faster than core Buffer manipulation functions.\n\nFunctions included\n\n* readInt(buffer, offset) -- (buffer.readInt8(offset))\n* writeInt(buffer, int, offset) -- (buffer.writeInt8(int, offset))\n* readInt32(buffer, offset) -- (buffer.readUInt32BE(offset))\n* writeInt32(buffer, int, offset) -- (buffer.writeUInt32BE(int, offset))\n* readString(buffer, start, end) -- (buffer.toString(start, end))\n* writeString(buffer, str, offset) -- (Buffer.write(str, 'utf8', offset))\n* readVarint(buffer, offset) -- (no equivalent)\n* writeVarint(buffer, int, offset) -- (no equivalent)\n\nNote that the Int32 functions are currently unsigned and big endian only, though I'd happily accept pull requests to add more functionality.\n\nBenchmark\n=========\n\n100,000,000 iterations of each function. (see bench.js)\n\n* Buffer#writeInt8: 1225ms\n* butils#writeInt: 166ms\n* \n* Buffer#readInt8: 761ms\n* butils#readInt: 164ms\n* \n* Buffer#writeUInt32BE: 1544ms\n* butils#writeInt32: 257ms\n* \n* Buffer#readUInt32BE: 1525ms\n* butils#readInt32: 323ms\n* \n* Buffer#write: 45101ms\n* butils#writeString: 2509ms\n* \n* Buffer#toString: 17505ms\n* butils#readString: 7340ms\n* \n* butils#writeVarint: 1264ms\n* \n* butils#readVarint: 4777ms\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/nlf/node-butils/issues"
  },
  "homepage": "https://github.com/nlf/node-butils",
  "_id": "butils@0.0.7",
  "_from": "butils@0.0.7",
  "scripts": {}
}
